<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenIddict.Abstractions</name>
    </assembly>
    <members>
        <member name="T:OpenIddict.Abstractions.OpenIddictApplicationDescriptor">
            <summary>
            Represents an OpenIddict application descriptor.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.ClientId">
            <summary>
            Gets or sets the client identifier
            associated with the application.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.ClientSecret">
            <summary>
            Gets or sets the client secret associated with the application.
            Note: depending on the application manager used when creating it,
            this property may be hashed or encrypted for security reasons.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.ConsentType">
            <summary>
            Gets or sets the consent type
            associated with the application.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.DisplayName">
            <summary>
            Gets or sets the display name
            associated with the application.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.Permissions">
            <summary>
            Gets the permissions associated with the application.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.PostLogoutRedirectUris">
            <summary>
            Gets the logout callback URLs
            associated with the application.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.RedirectUris">
            <summary>
            Gets the callback URLs
            associated with the application.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictApplicationDescriptor.Type">
            <summary>
            Gets or sets the application type
            associated with the application.
            </summary>
        </member>
        <member name="T:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor">
            <summary>
            Represents an OpenIddict authorization descriptor.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.ApplicationId">
            <summary>
            Gets or sets the application identifier associated with the authorization.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.Principal">
            <summary>
            Gets or sets the optional principal associated with the authorization.
            Note: this property is not stored by the default authorization stores.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.Properties">
            <summary>
            Gets the optional authentication properties associated with the authorization.
            Note: this property is not stored by the default authorization stores.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.Scopes">
            <summary>
            Gets the scopes associated with the authorization.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.Status">
            <summary>
            Gets or sets the status associated with the authorization.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.Subject">
            <summary>
            Gets or sets the subject associated with the authorization.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor.Type">
            <summary>
            Gets or sets the type of the authorization.
            </summary>
        </member>
        <member name="T:OpenIddict.Abstractions.OpenIddictScopeDescriptor">
            <summary>
            Represents an OpenIddict scope descriptor.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictScopeDescriptor.Description">
            <summary>
            Gets or sets the description
            associated with the scope.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictScopeDescriptor.DisplayName">
            <summary>
            Gets or sets the display name
            associated with the scope.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictScopeDescriptor.Name">
            <summary>
            Gets or sets the unique name
            associated with the scope.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictScopeDescriptor.Resources">
            <summary>
            Gets the resources associated with the scope.
            </summary>
        </member>
        <member name="T:OpenIddict.Abstractions.OpenIddictTokenDescriptor">
            <summary>
            Represents an OpenIddict token descriptor.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.ApplicationId">
            <summary>
            Gets or sets the application identifier associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.AuthorizationId">
            <summary>
            Gets or sets the authorization identifier associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.CreationDate">
            <summary>
            Gets or sets the creation date associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.ExpirationDate">
            <summary>
            Gets or sets the expiration date associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.Payload">
            <summary>
            Gets or sets the payload associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.Principal">
            <summary>
            Gets or sets the optional principal associated with the token.
            Note: this property is not stored by the default token stores.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.Properties">
            <summary>
            Gets the optional authentication properties associated with the token.
            Note: this property is not stored by the default token stores.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.ReferenceId">
            <summary>
            Gets or sets the reference identifier associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.Status">
            <summary>
            Gets or sets the status associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.Subject">
            <summary>
            Gets or sets the subject associated with the token.
            </summary>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictTokenDescriptor.Type">
            <summary>
            Gets or sets the token type.
            </summary>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictApplicationManager">
            <summary>
            Provides methods allowing to manage the applications stored in the store.
            Note: this interface is not meant to be implemented by custom managers,
            that should inherit from the generic OpenIddictApplicationManager class.
            It is primarily intended to be used by services that cannot easily depend
            on the generic application manager. The actual application entity type
            is automatically determined at runtime based on the OpenIddict core options.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of applications that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of applications in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.CountAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of applications that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of applications that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.CreateAsync(OpenIddict.Abstractions.OpenIddictApplicationDescriptor,System.Threading.CancellationToken)">
            <summary>
            Creates a new application based on the specified descriptor.
            Note: the default implementation automatically hashes the client
            secret before storing it in the database, for security reasons.
            </summary>
            <param name="descriptor">The application descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.CreateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a new application.
            </summary>
            <param name="application">The application to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.CreateAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new application.
            Note: the default implementation automatically hashes the client
            secret before storing it in the database, for security reasons.
            </summary>
            <param name="application">The application to create.</param>
            <param name="secret">The client secret associated with the application, if applicable.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.DeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Removes an existing application.
            </summary>
            <param name="application">The application to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByClientIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an application using its client identifier.
            </summary>
            <param name="identifier">The client identifier associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the client application corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an application using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the client application corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByPostLogoutRedirectUriAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the applications associated with the specified post_logout_redirect_uri.
            </summary>
            <param name="address">The post_logout_redirect_uri associated with the applications.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result
            returns the client applications corresponding to the specified post_logout_redirect_uri.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByRedirectUriAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the applications associated with the specified redirect_uri.
            </summary>
            <param name="address">The redirect_uri associated with the applications.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result
            returns the client applications corresponding to the specified redirect_uri.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetClientIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the client identifier associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the client identifier associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetClientTypeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the client type associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the client type of the application (by default, "public").
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetConsentTypeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the consent type associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the consent type of the application (by default, "explicit").
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetDisplayNameAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the display name associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the display name associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetPermissionsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the permissions associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the permissions associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetPostLogoutRedirectUrisAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the logout callback addresses associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the post_logout_redirect_uri associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.GetRedirectUrisAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the callback addresses associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the redirect_uri associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.HasPermissionAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Determines whether the specified permission has been granted to the application.
            </summary>
            <param name="application">The application.</param>
            <param name="permission">The permission.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the application has been granted the specified permission, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.IsConfidentialAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether an application is a confidential client.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the application is a confidential client, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.IsHybridAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether an application is a hybrid client.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the application is a hybrid client, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.IsPublicAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether an application is a public client.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the application is a public client, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.ListAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.ListAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.PopulateAsync(OpenIddict.Abstractions.OpenIddictApplicationDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Populates the specified descriptor using the properties exposed by the application.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.PopulateAsync(System.Object,OpenIddict.Abstractions.OpenIddictApplicationDescriptor,System.Threading.CancellationToken)">
            <summary>
            Populates the application using the specified descriptor.
            </summary>
            <param name="application">The application.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.UpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates an existing application.
            </summary>
            <param name="application">The application to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.UpdateAsync(System.Object,OpenIddict.Abstractions.OpenIddictApplicationDescriptor,System.Threading.CancellationToken)">
            <summary>
            Updates an existing application.
            </summary>
            <param name="application">The application to update.</param>
            <param name="descriptor">The descriptor used to update the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.UpdateAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates an existing application and replaces the existing secret.
            Note: the default implementation automatically hashes the client
            secret before storing it in the database, for security reasons.
            </summary>
            <param name="application">The application to update.</param>
            <param name="secret">The client secret associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Validates the application to ensure it's in a consistent state.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the validation error encountered when validating the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidateClientSecretAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Validates the client_secret associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="secret">The secret that should be compared to the client_secret stored in the database.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.</returns>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns a boolean indicating whether the client secret was valid.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidateRedirectUriAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Validates the redirect_uri to ensure it's associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="address">The address that should be compared to one of the redirect_uri stored in the database.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns a boolean indicating whether the redirect_uri was valid.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictAuthorizationManager">
            <summary>
            Provides methods allowing to manage the authorizations stored in the store.
            Note: this interface is not meant to be implemented by custom managers,
            that should inherit from the generic OpenIddictAuthorizationManager class.
            It is primarily intended to be used by services that cannot easily depend
            on the generic authorization manager. The actual authorization entity type
            is automatically determined at runtime based on the OpenIddict core options.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of authorizations that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of authorizations in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CountAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of authorizations that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of authorizations that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a new permanent authorization based on the specified parameters.
            </summary>
            <param name="principal">The principal associated with the authorization.</param>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="type">The authorization type.</param>
            <param name="scopes">The minimal scopes associated with the authorization.</param>
            <param name="properties">The authentication properties associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result returns the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor,System.Threading.CancellationToken)">
            <summary>
            Creates a new authorization based on the specified descriptor.
            </summary>
            <param name="descriptor">The authorization descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result returns the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a new authorization.
            </summary>
            <param name="authorization">The application to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.DeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Removes an existing authorization.
            </summary>
            <param name="authorization">The authorization to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations corresponding to the specified
            subject and associated with the application identifier.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the subject/client.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations matching the specified parameters.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="status">The authorization status.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the criteria.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations matching the specified parameters.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="status">The authorization status.</param>
            <param name="type">The authorization type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the criteria.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(System.String,System.String,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations matching the specified parameters.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="status">The authorization status.</param>
            <param name="type">The authorization type.</param>
            <param name="scopes">The minimal scopes associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the criteria.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an authorization using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorization corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindBySubjectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the authorizations corresponding to the specified subject.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the specified subject.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetApplicationIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the optional application identifier associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the application identifier associated with the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetScopesAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the scopes associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the scopes associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetStatusAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the status associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetSubjectAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the subject associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the subject associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetTypeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the type associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the type associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.HasScopesAsync(System.Object,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Determines whether the specified scopes are included in the authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="scopes">The scopes.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the scopes are included in the authorization, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.IsAdHocAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given authorization is ad hoc.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the authorization is ad hoc, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.IsPermanentAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given authorization is permanent.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the authorization is permanent, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.IsRevokedAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given authorization has been revoked.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the authorization has been revoked, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.IsValidAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given authorization is valid.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the authorization is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ListAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ListAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.PopulateAsync(OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Populates the specified descriptor using the properties exposed by the authorization.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.PopulateAsync(System.Object,OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor,System.Threading.CancellationToken)">
            <summary>
            Populates the authorization using the specified descriptor.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.PruneAsync(System.Threading.CancellationToken)">
            <summary>
            Removes the ad-hoc authorizations that are marked as invalid or have no valid token attached.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.RevokeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Revokes an authorization.
            </summary>
            <param name="authorization">The authorization to revoke.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.SetApplicationIdAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the application identifier associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="identifier">The unique identifier associated with the client application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.UpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates an existing authorization.
            </summary>
            <param name="authorization">The authorization to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.UpdateAsync(System.Object,OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor,System.Threading.CancellationToken)">
            <summary>
            Updates an existing authorization.
            </summary>
            <param name="authorization">The authorization to update.</param>
            <param name="descriptor">The descriptor used to update the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ValidateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Validates the authorization to ensure it's in a consistent state.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the validation error encountered when validating the authorization.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictScopeManager">
            <summary>
            Provides methods allowing to manage the scopes stored in the store.
            Note: this interface is not meant to be implemented by custom managers,
            that should inherit from the generic OpenIddictScopeManager class.
            It is primarily intended to be used by services that cannot easily
            depend on the generic scope manager. The actual scope entity type is
            automatically determined at runtime based on the OpenIddict core options.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of scopes that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of scopes in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.CountAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of scopes that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of scopes that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.CreateAsync(OpenIddict.Abstractions.OpenIddictScopeDescriptor,System.Threading.CancellationToken)">
            <summary>
            Creates a new scope based on the specified descriptor.
            </summary>
            <param name="descriptor">The scope descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result returns the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.CreateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a new scope.
            </summary>
            <param name="scope">The scope to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.DeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Removes an existing scope.
            </summary>
            <param name="scope">The scope to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a scope using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scope corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a scope using its name.
            </summary>
            <param name="name">The name associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scope corresponding to the specified name.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.FindByNamesAsync(System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of scopes using their name.
            </summary>
            <param name="names">The names associated with the scopes.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scopes corresponding to the specified names.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.FindByResourceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the scopes that contain the specified resource.
            </summary>
            <param name="resource">The resource associated with the scopes.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scopes associated with the specified resource.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetDescriptionAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the description associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the description associated with the specified scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetDisplayNameAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the display name associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the display name associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetNameAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the name associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the name associated with the specified scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.GetResourcesAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the resources associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the resources associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.ListAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.ListAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.ListResourcesAsync(System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Lists all the resources associated with the specified scopes.
            </summary>
            <param name="scopes">The scopes.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the resources associated with the specified scopes.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.PopulateAsync(OpenIddict.Abstractions.OpenIddictScopeDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Populates the specified descriptor using the properties exposed by the scope.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.PopulateAsync(System.Object,OpenIddict.Abstractions.OpenIddictScopeDescriptor,System.Threading.CancellationToken)">
            <summary>
            Populates the scope using the specified descriptor.
            </summary>
            <param name="scope">The scope.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.UpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates an existing scope.
            </summary>
            <param name="scope">The scope to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.UpdateAsync(System.Object,OpenIddict.Abstractions.OpenIddictScopeDescriptor,System.Threading.CancellationToken)">
            <summary>
            Updates an existing scope.
            </summary>
            <param name="scope">The scope to update.</param>
            <param name="descriptor">The descriptor used to update the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeManager.ValidateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Validates the scope to ensure it's in a consistent state.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the validation error encountered when validating the scope.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictTokenManager">
            <summary>
            Provides methods allowing to manage the tokens stored in the store.
            Note: this interface is not meant to be implemented by custom managers,
            that should inherit from the generic OpenIddictTokenManager class.
            It is primarily intended to be used by services that cannot easily
            depend on the generic token manager. The actual token entity type is
            automatically determined at runtime based on the OpenIddict core options.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of tokens that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of tokens in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.CountAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of tokens that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of tokens that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.CreateAsync(OpenIddict.Abstractions.OpenIddictTokenDescriptor,System.Threading.CancellationToken)">
            <summary>
            Creates a new token based on the specified descriptor.
            </summary>
            <param name="descriptor">The token descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result returns the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.CreateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a new token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.DeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Removes an existing token.
            </summary>
            <param name="token">The token to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.ExtendAsync(System.Object,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Extends the specified token by replacing its expiration date.
            </summary>
            <param name="token">The token.</param>
            <param name="date">The date on which the token will no longer be considered valid.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.FindByApplicationIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified application identifier.
            </summary>
            <param name="identifier">The application identifier associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.FindByAuthorizationIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified authorization identifier.
            </summary>
            <param name="identifier">The authorization identifier associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a token using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the token corresponding to the unique identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.FindByReferenceIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified reference identifier.
            Note: the reference identifier may be hashed or encrypted for security reasons.
            </summary>
            <param name="identifier">The reference identifier associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified reference identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.FindBySubjectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified subject.
            </summary>
            <param name="subject">The subject associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified subject.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetApplicationIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the optional application identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the application identifier associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetAuthorizationIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the optional authorization identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorization identifier associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetCreationDateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the creation date associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the creation date associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetExpirationDateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the expiration date associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the expiration date associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetPayloadAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the payload associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the payload associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetReferenceIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the reference identifier associated with a token.
            Note: depending on the manager used to create the token,
            the reference identifier may be hashed for security reasons.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the reference identifier associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetStatusAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the status associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetSubjectAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the subject associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the subject associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.GetTokenTypeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the token type associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the token type associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.IsRedeemedAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given token has already been redemeed.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the token has already been redemeed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.IsRevokedAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given token has been revoked.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the token has been revoked, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.IsValidAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Determines whether a given token is valid.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns><c>true</c> if the token is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.ListAsync``1(System.Func{System.Linq.IQueryable{System.Object},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.ListAsync``2(System.Func{System.Linq.IQueryable{System.Object},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.ObfuscateReferenceIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obfuscates the specified reference identifier so it can be safely stored in a database.
            By default, this method returns a simple hashed representation computed using SHA256.
            </summary>
            <param name="identifier">The client identifier.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.PopulateAsync(OpenIddict.Abstractions.OpenIddictTokenDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Populates the specified descriptor using the properties exposed by the token.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.PopulateAsync(System.Object,OpenIddict.Abstractions.OpenIddictTokenDescriptor,System.Threading.CancellationToken)">
            <summary>
            Populates the token using the specified descriptor.
            </summary>
            <param name="token">The token.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.PruneAsync(System.Threading.CancellationToken)">
            <summary>
            Removes the tokens that are marked as expired or invalid.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.RedeemAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Redeems a token.
            </summary>
            <param name="token">The token to redeem.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.RevokeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Revokes a token.
            </summary>
            <param name="token">The token to revoke.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.SetApplicationIdAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the application identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="identifier">The unique identifier associated with the client application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.SetAuthorizationIdAsync(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the authorization identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="identifier">The unique identifier associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.UpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates an existing token.
            </summary>
            <param name="token">The token to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.UpdateAsync(System.Object,OpenIddict.Abstractions.OpenIddictTokenDescriptor,System.Threading.CancellationToken)">
            <summary>
            Updates an existing token.
            </summary>
            <param name="token">The token to update.</param>
            <param name="descriptor">The descriptor used to update the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenManager.ValidateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Validates the token to ensure it's in a consistent state.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the validation error encountered when validating the token.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.OpenIddictException">
            <summary>
            Represents an OpenIddict exception.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.OpenIddictException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:OpenIddict.Abstractions.OpenIddictException"/>.
            </summary>
            <param name="reason">The reason of the exception.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:OpenIddict.Abstractions.OpenIddictException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:OpenIddict.Abstractions.OpenIddictException"/>.
            </summary>
            <param name="reason">The reason of the exception.</param>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:OpenIddict.Abstractions.OpenIddictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:OpenIddict.Abstractions.OpenIddictException"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
        </member>
        <member name="P:OpenIddict.Abstractions.OpenIddictException.Reason">
            <summary>
            Gets the reason that caused the exception to be thrown.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.OpenIddictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the members of this class.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictApplicationStoreResolver">
            <summary>
            Exposes a method allowing to resolve an application store.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStoreResolver.Get``1">
            <summary>
            Returns an application store compatible with the specified application type or throws an
            <see cref="T:System.InvalidOperationException"/> if no store can be built using the specified type.
            </summary>
            <typeparam name="TApplication">The type of the Application entity.</typeparam>
            <returns>An <see cref="T:OpenIddict.Abstractions.IOpenIddictApplicationStore`1"/>.</returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictAuthorizationStoreResolver">
            <summary>
            Exposes a method allowing to resolve an authorization store.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStoreResolver.Get``1">
            <summary>
            Returns an authorization store compatible with the specified authorization type or throws an
            <see cref="T:System.InvalidOperationException"/> if no store can be built using the specified type.
            </summary>
            <typeparam name="TAuthorization">The type of the Authorization entity.</typeparam>
            <returns>An <see cref="T:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1"/>.</returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictScopeStoreResolver">
            <summary>
            Exposes a method allowing to resolve a scope store.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStoreResolver.Get``1">
            <summary>
            Returns a scope store compatible with the specified scope type or throws an
            <see cref="T:System.InvalidOperationException"/> if no store can be built using the specified type.
            </summary>
            <typeparam name="TScope">The type of the Scope entity.</typeparam>
            <returns>An <see cref="T:OpenIddict.Abstractions.IOpenIddictScopeStore`1"/>.</returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictTokenStoreResolver">
            <summary>
            Exposes a method allowing to resolve a token store.
            </summary>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStoreResolver.Get``1">
            <summary>
            Returns a token store compatible with the specified token type or throws an
            <see cref="T:System.InvalidOperationException"/> if no store can be built using the specified type.
            </summary>
            <typeparam name="TToken">The type of the Token entity.</typeparam>
            <returns>An <see cref="T:OpenIddict.Abstractions.IOpenIddictTokenStore`1"/>.</returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictApplicationStore`1">
            <summary>
            Provides methods allowing to manage the applications stored in a database.
            </summary>
            <typeparam name="TApplication">The type of the Application entity.</typeparam>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of applications that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of applications in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.CountAsync``1(System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of applications that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of applications that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a new application.
            </summary>
            <param name="application">The application to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Removes an existing application.
            </summary>
            <param name="application">The application to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an application using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the client application corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.FindByClientIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an application using its client identifier.
            </summary>
            <param name="identifier">The client identifier associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the client application corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.FindByPostLogoutRedirectUriAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the applications associated with the specified post_logout_redirect_uri.
            </summary>
            <param name="address">The post_logout_redirect_uri associated with the applications.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result
            returns the client applications corresponding to the specified post_logout_redirect_uri.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.FindByRedirectUriAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the applications associated with the specified redirect_uri.
            </summary>
            <param name="address">The redirect_uri associated with the applications.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation, whose result
            returns the client applications corresponding to the specified redirect_uri.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetClientIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the client identifier associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the client identifier associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetClientSecretAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the client secret associated with an application.
            Note: depending on the manager used to create the application,
            the client secret may be hashed for security reasons.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the client secret associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetClientTypeAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the client type associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the client type of the application (by default, "public").
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetConsentTypeAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the consent type associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the consent type of the application (by default, "explicit").
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetDisplayNameAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the display name associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the display name associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetPermissionsAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the permissions associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the permissions associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetPostLogoutRedirectUrisAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the logout callback addresses associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the post_logout_redirect_uri associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetPropertiesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the additional properties associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the additional properties associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.GetRedirectUrisAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the callback addresses associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the redirect_uri associated with the application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.InstantiateAsync(System.Threading.CancellationToken)">
            <summary>
            Instantiates a new application.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the instantiated application, that can be persisted in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.ListAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetClientIdAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the client identifier associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="identifier">The client identifier associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetClientSecretAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the client secret associated with an application.
            Note: depending on the manager used to create the application,
            the client secret may be hashed for security reasons.
            </summary>
            <param name="application">The application.</param>
            <param name="secret">The client secret associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetClientTypeAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the client type associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="type">The client type associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetConsentTypeAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the consent type associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="type">The consent type associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetDisplayNameAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the display name associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="name">The display name associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetPermissionsAsync(`0,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the permissions associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="permissions">The permissions associated with the application </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetPostLogoutRedirectUrisAsync(`0,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the logout callback addresses associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="addresses">The logout callback addresses associated with the application </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetPropertiesAsync(`0,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)">
            <summary>
            Sets the additional properties associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="properties">The additional properties associated with the application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.SetRedirectUrisAsync(`0,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the callback addresses associated with an application.
            </summary>
            <param name="application">The application.</param>
            <param name="addresses">The callback addresses associated with the application </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictApplicationStore`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates an existing application.
            </summary>
            <param name="application">The application to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1">
            <summary>
            Provides methods allowing to manage the authorizations stored in a database.
            </summary>
            <typeparam name="TAuthorization">The type of the Authorization entity.</typeparam>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of authorizations that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of authorizations in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.CountAsync``1(System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of authorizations that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of authorizations that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a new authorization.
            </summary>
            <param name="authorization">The authorization to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Removes an existing authorization.
            </summary>
            <param name="authorization">The authorization to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.FindAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations corresponding to the specified
            subject and associated with the application identifier.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the subject/client.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.FindAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations matching the specified parameters.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="status">The authorization status.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the criteria.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.FindAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the authorizations matching the specified parameters.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="client">The client associated with the authorization.</param>
            <param name="status">The authorization status.</param>
            <param name="type">The authorization type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the criteria.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an authorization using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorization corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.FindBySubjectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the authorizations corresponding to the specified subject.
            </summary>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorizations corresponding to the specified subject.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetApplicationIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the optional application identifier associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the application identifier associated with the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetPropertiesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the additional properties associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the additional properties associated with the authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetScopesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the scopes associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the scopes associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetStatusAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the status associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetSubjectAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the subject associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the subject associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.GetTypeAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the type associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the type associated with the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.InstantiateAsync(System.Threading.CancellationToken)">
            <summary>
            Instantiates a new authorization.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the instantiated authorization, that can be persisted in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.ListAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.PruneAsync(System.Threading.CancellationToken)">
            <summary>
            Removes the ad-hoc authorizations that are marked as invalid or have no valid token attached.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.SetApplicationIdAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the application identifier associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="identifier">The unique identifier associated with the client application.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.SetPropertiesAsync(`0,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)">
            <summary>
            Sets the additional properties associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="properties">The additional properties associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.SetScopesAsync(`0,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the scopes associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="scopes">The scopes associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.SetStatusAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the status associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="status">The status associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.SetSubjectAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the subject associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="subject">The subject associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.SetTypeAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the type associated with an authorization.
            </summary>
            <param name="authorization">The authorization.</param>
            <param name="type">The type associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates an existing authorization.
            </summary>
            <param name="authorization">The authorization to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictScopeStore`1">
            <summary>
            Provides methods allowing to manage the scopes stored in a database.
            </summary>
            <typeparam name="TScope">The type of the Scope entity.</typeparam>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of scopes that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of scopes in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.CountAsync``1(System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of scopes that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of scopes that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a new scope.
            </summary>
            <param name="scope">The scope to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Removes an existing scope.
            </summary>
            <param name="scope">The scope to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a scope using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scope corresponding to the identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a scope using its name.
            </summary>
            <param name="name">The name associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scope corresponding to the specified name.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.FindByNamesAsync(System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of scopes using their name.
            </summary>
            <param name="names">The names associated with the scopes.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scopes corresponding to the specified names.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.FindByResourceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all the scopes that contain the specified resource.
            </summary>
            <param name="resource">The resource associated with the scopes.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the scopes associated with the specified resource.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetDescriptionAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the description associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the description associated with the specified scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetDisplayNameAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the display name associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the display name associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetNameAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the name associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the name associated with the specified scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetPropertiesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the additional properties associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation, whose
            result returns all the additional properties associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.GetResourcesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the resources associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the resources associated with the scope.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.InstantiateAsync(System.Threading.CancellationToken)">
            <summary>
            Instantiates a new scope.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the instantiated scope, that can be persisted in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.ListAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.SetDescriptionAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the description associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="description">The description associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.SetDisplayNameAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the display name associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="name">The display name associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.SetNameAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the name associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="name">The name associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.SetPropertiesAsync(`0,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)">
            <summary>
            Sets the additional properties associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="properties">The additional properties associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.SetResourcesAsync(`0,System.Collections.Immutable.ImmutableArray{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the resources associated with a scope.
            </summary>
            <param name="scope">The scope.</param>
            <param name="resources">The resources associated with the scope.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictScopeStore`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates an existing scope.
            </summary>
            <param name="scope">The scope to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="T:OpenIddict.Abstractions.IOpenIddictTokenStore`1">
            <summary>
            Provides methods allowing to manage the tokens stored in a database.
            </summary>
            <typeparam name="TToken">The type of the Token entity.</typeparam>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Determines the number of tokens that exist in the database.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of applications in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.CountAsync``1(System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Determines the number of tokens that match the specified query.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the number of tokens that match the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a new token.
            </summary>
            <param name="token">The token to create.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Removes a token.
            </summary>
            <param name="token">The token to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.</returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.FindByApplicationIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified application identifier.
            </summary>
            <param name="identifier">The application identifier associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified application.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.FindByAuthorizationIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified authorization identifier.
            </summary>
            <param name="identifier">The authorization identifier associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified authorization.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a token using its unique identifier.
            </summary>
            <param name="identifier">The unique identifier associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the token corresponding to the unique identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.FindByReferenceIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified reference identifier.
            Note: the reference identifier may be hashed or encrypted for security reasons.
            </summary>
            <param name="identifier">The reference identifier associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified reference identifier.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.FindBySubjectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of tokens corresponding to the specified subject.
            </summary>
            <param name="subject">The subject associated with the tokens.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the tokens corresponding to the specified subject.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetApplicationIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the optional application identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the application identifier associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns the first element.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns the first element returned when executing the query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetAuthorizationIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the optional authorization identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the authorization identifier associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetCreationDateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the creation date associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the creation date associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetExpirationDateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the expiration date associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the expiration date associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the unique identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the unique identifier associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetPayloadAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the payload associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the payload associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetPropertiesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the additional properties associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns all the additional properties associated with the token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetReferenceIdAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the reference identifier associated with a token.
            Note: depending on the manager used to create the token,
            the reference identifier may be hashed for security reasons.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the reference identifier associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetStatusAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the status associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetSubjectAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the subject associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the subject associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.GetTokenTypeAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves the token type associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the token type associated with the specified token.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.InstantiateAsync(System.Threading.CancellationToken)">
            <summary>
            Instantiates a new token.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that can be used to monitor the asynchronous operation,
            whose result returns the instantiated token, that can be persisted in the database.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.ListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <param name="count">The number of results to return.</param>
            <param name="offset">The number of results to skip.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.ListAsync``2(System.Func{System.Linq.IQueryable{`0},``0,System.Linq.IQueryable{``1}},``0,System.Threading.CancellationToken)">
            <summary>
            Executes the specified query and returns all the corresponding elements.
            </summary>
            <typeparam name="TState">The state type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="query">The query to execute.</param>
            <param name="state">The optional state.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation,
            whose result returns all the elements returned when executing the specified query.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.PruneAsync(System.Threading.CancellationToken)">
            <summary>
            Removes the tokens that are marked as expired or invalid.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetApplicationIdAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the application identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="identifier">The unique identifier associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetAuthorizationIdAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the authorization identifier associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="identifier">The unique identifier associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetCreationDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Sets the creation date associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="date">The creation date.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetExpirationDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Sets the expiration date associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="date">The expiration date.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetPayloadAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the payload associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="payload">The payload associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetPropertiesAsync(`0,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)">
            <summary>
            Sets the additional properties associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="properties">The additional properties associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetReferenceIdAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the reference identifier associated with a token.
            Note: depending on the manager used to create the token,
            the reference identifier may be hashed for security reasons.
            </summary>
            <param name="token">The token.</param>
            <param name="identifier">The reference identifier associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetStatusAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the status associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="status">The status associated with the authorization.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetSubjectAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the subject associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="subject">The subject associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.SetTokenTypeAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the token type associated with a token.
            </summary>
            <param name="token">The token.</param>
            <param name="type">The token type associated with the token.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="M:OpenIddict.Abstractions.IOpenIddictTokenStore`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates an existing token.
            </summary>
            <param name="token">The token to update.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder">
            <summary>
            Provides a shared entry point allowing to configure the OpenIddict services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder"/>.
            </summary>
            <param name="services">The services collection.</param>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder.Services">
            <summary>
            Gets the services collection.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictExtensions.AddOpenIddict(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Provides a common entry point for registering the OpenIddict services.
            </summary>
            <param name="services">The services collection.</param>
            <remarks>This extension can be safely called multiple times.</remarks>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictExtensions.AddOpenIddict(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.OpenIddictBuilder})">
            <summary>
            Provides a common entry point for registering the OpenIddict services.
            </summary>
            <param name="services">The services collection.</param>
            <param name="configuration">The configuration delegate used to register new services.</param>
            <remarks>This extension can be safely called multiple times.</remarks>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder"/>.</returns>
        </member>
    </members>
</doc>
