<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenIddict.Validation</name>
    </assembly>
    <members>
        <member name="T:OpenIddict.Validation.IOpenIddictValidationHandler`1">
            <summary>
            Represents a handler able to process <typeparamref name="TContext"/> events.
            </summary>
            <typeparam name="TContext">The type of the context associated with events handled by this instance.</typeparam>
        </member>
        <member name="M:OpenIddict.Validation.IOpenIddictValidationHandler`1.HandleAsync(`0)">
            <summary>
            Processes the event.
            </summary>
            <param name="context">The context associated with the event to process.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationConfiguration">
            <summary>
            Contains the methods required to ensure that the OpenIddict validation configuration is valid.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationConfiguration.PostConfigure(System.String,OpenIddict.Validation.OpenIddictValidationOptions)">
            <summary>
            Populates the default OpenIddict validation options and ensures
            that the configuration is in a consistent and valid state.
            </summary>
            <param name="name">The name of the options instance to configure, if applicable.</param>
            <param name="options">The options instance to initialize.</param>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationDispatcher.#ctor(Microsoft.Extensions.Logging.ILogger{OpenIddict.Validation.OpenIddictValidationDispatcher},Microsoft.Extensions.Options.IOptionsMonitor{OpenIddict.Validation.OpenIddictValidationOptions},System.IServiceProvider)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationDispatcher"/> class.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEndpointType">
            <summary>
            Represents the type of an OpenIddict validation endpoint.
            </summary>
        </member>
        <member name="F:OpenIddict.Validation.OpenIddictValidationEndpointType.Unknown">
            <summary>
            Unknown endpoint.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext">
            <summary>
            Represents an abstract base class used for certain event contexts.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.Transaction">
            <summary>
            Gets the environment associated with the current request being processed.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.EndpointType">
            <summary>
            Gets or sets the endpoint type that handled the request, if applicable.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.Issuer">
            <summary>
            Gets or sets the issuer address associated with the current transaction, if available.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.Localizer">
            <summary>
            Gets the localizer used to localize the messages generated by OpenIddict.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.Logger">
            <summary>
            Gets the logger responsible of logging processed operations.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseContext.Options">
            <summary>
            Gets the OpenIddict validation options.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext">
            <summary>
            Represents an abstract base class used for certain event contexts.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext.IsRequestHandled">
            <summary>
            Gets a boolean indicating whether the request was fully handled.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext.IsRequestSkipped">
            <summary>
            Gets a boolean indicating whether the request processing was skipped.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext.HandleRequest">
            <summary>
            Marks the request as fully handled. Once declared handled,
            a request shouldn't be processed further by the underlying host.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext.SkipRequest">
            <summary>
            Marks the request as skipped. Once declared skipped, a request
            shouldn't be processed further by OpenIddict but should be allowed
            to go through the next components in the processing pipeline
            (if this pattern is supported by the underlying host).
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseExternalContext">
            <summary>
            Represents an abstract base class used for certain event contexts.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseExternalContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseExternalContext.Address">
            <summary>
            Gets or sets the address of the external endpoint to communicate with.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext">
            <summary>
            Represents an abstract base class used for certain event contexts.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.IsRejected">
            <summary>
            Gets a boolean indicating whether the request will be rejected.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.Error">
            <summary>
            Gets or sets the "error" parameter returned to the client application.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.ErrorDescription">
            <summary>
            Gets or sets the "error_description" parameter returned to the client application.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.ErrorUri">
            <summary>
            Gets or sets the "error_uri" parameter returned to the client application.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.Reject">
            <summary>
            Rejects the request.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.Reject(System.String)">
            <summary>
            Rejects the request.
            </summary>
            <param name="error">The "error" parameter returned to the client application.</param>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.Reject(System.String,System.String)">
            <summary>
            Rejects the request.
            </summary>
            <param name="error">The "error" parameter returned to the client application.</param>
            <param name="description">The "error_description" parameter returned to the client application.</param>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.BaseValidatingContext.Reject(System.String,System.String,System.String)">
            <summary>
            Rejects the request.
            </summary>
            <param name="error">The "error" parameter returned to the client application.</param>
            <param name="description">The "error_description" parameter returned to the client application.</param>
            <param name="uri">The "error_uri" parameter returned to the client application.</param>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessRequestContext">
            <summary>
            Represents an event called when processing an incoming request.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ProcessRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessRequestContext"/> class.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessErrorContext">
            <summary>
            Represents an event called when processing an errored response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ProcessErrorContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessErrorContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessErrorContext.Request">
            <summary>
            Gets or sets the request, or <c>null</c> if it couldn't be extracted.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessErrorContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext">
            <summary>
            Represents an event called when processing an authentication operation.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext.Principal">
            <summary>
            Gets or sets the security principal.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext.Token">
            <summary>
            Gets or sets the token to validate.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext.TokenType">
            <summary>
            Gets or sets the expected type of the token.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessChallengeContext">
            <summary>
            Represents an event called when processing a challenge response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ProcessChallengeContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ProcessChallengeContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessChallengeContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ProcessChallengeContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.PrepareConfigurationRequestContext">
            <summary>
            Represents an event called for each request to the configuration endpoint
            to give the user code a chance to add parameters to the configuration request.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.PrepareConfigurationRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.PrepareConfigurationRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.PrepareConfigurationRequestContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ApplyConfigurationRequestContext">
            <summary>
            Represents an event called for each request to the configuration endpoint
            to send the configuration request to the remote authorization server.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ApplyConfigurationRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ApplyConfigurationRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ApplyConfigurationRequestContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ExtractConfigurationResponseContext">
            <summary>
            Represents an event called for each configuration response
            to extract the response parameters from the server response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ExtractConfigurationResponseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ExtractConfigurationResponseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ExtractConfigurationResponseContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ExtractConfigurationResponseContext.Response">
            <summary>
            Gets or sets the response, or <c>null</c> if it wasn't extracted yet.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext">
            <summary>
            Represents an event called for each validated configuration response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext.Configuration">
            <summary>
            Gets the OpenID Connect configuration.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.PrepareCryptographyRequestContext">
            <summary>
            Represents an event called for each request to the cryptography endpoint
            to give the user code a chance to add parameters to the cryptography request.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.PrepareCryptographyRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.PrepareCryptographyRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.PrepareCryptographyRequestContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ApplyCryptographyRequestContext">
            <summary>
            Represents an event called for each request to the cryptography endpoint
            to send the cryptography request to the remote authorization server.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ApplyCryptographyRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ApplyCryptographyRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ApplyCryptographyRequestContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ExtractCryptographyResponseContext">
            <summary>
            Represents an event called for each cryptography response
            to extract the response parameters from the server response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ExtractCryptographyResponseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ExtractCryptographyResponseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ExtractCryptographyResponseContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ExtractCryptographyResponseContext.Response">
            <summary>
            Gets or sets the response, or <c>null</c> if it wasn't extracted yet.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext">
            <summary>
            Represents an event called for each validated cryptography response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext.SecurityKeys">
            <summary>
            Gets the security keys.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext">
            <summary>
            Represents an event called for each request to the introspection endpoint
            to give the user code a chance to add parameters to the introspection request.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext.Token">
            <summary>
            Gets or sets the token sent to the introspection endpoint.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext.TokenType">
            <summary>
            Gets or sets the token type sent to the introspection endpoint.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ApplyIntrospectionRequestContext">
            <summary>
            Represents an event called for each request to the introspection endpoint
            to send the introspection request to the remote authorization server.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ApplyIntrospectionRequestContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ApplyIntrospectionRequestContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ApplyIntrospectionRequestContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.ExtractIntrospectionResponseContext">
            <summary>
            Represents an event called for each introspection response
            to extract the response parameters from the server response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.ExtractIntrospectionResponseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.ExtractIntrospectionResponseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ExtractIntrospectionResponseContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.ExtractIntrospectionResponseContext.Response">
            <summary>
            Gets or sets the response, or <c>null</c> if it wasn't extracted yet.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext">
            <summary>
            Represents an event called for each validated introspection response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext.#ctor(OpenIddict.Validation.OpenIddictValidationTransaction)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext.Token">
            <summary>
            Gets or sets the token sent to the introspection endpoint.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext.TokenType">
            <summary>
            Gets or sets the token type sent to the introspection endpoint.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext.Principal">
            <summary>
            Gets or sets the principal containing the claims resolved from the introspection response.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationFactory.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{OpenIddict.Abstractions.OpenIddictResources},Microsoft.Extensions.Logging.ILogger{OpenIddict.Validation.OpenIddictValidationDispatcher},Microsoft.Extensions.Options.IOptionsMonitor{OpenIddict.Validation.OpenIddictValidationOptions})">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationFactory"/> class.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandler`1">
            <summary>
            Represents a handler able to process <typeparamref name="TContext"/> events.
            </summary>
            <typeparam name="TContext">The type of the events handled by this instance.</typeparam>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandler`1.#ctor(System.Func{`0,System.Threading.Tasks.ValueTask})">
            <summary>
            Creates a new event using the specified handler delegate.
            </summary>
            <param name="handler">The event handler delegate.</param>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandler`1.HandleAsync(`0)">
            <summary>
            Processes the event.
            </summary>
            <param name="context">The event to process.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask"/> that can be used to monitor the asynchronous operation.
            </returns>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor">
            <summary>
            Represents an immutable descriptor of an OpenIddict validation event handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor"/> class.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.ContextType">
            <summary>
            Gets the context type associated with the event.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.FilterTypes">
            <summary>
            Gets the list of filters responsible of excluding the handler
            from the activated handlers if it doesn't meet the criteria.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Order">
            <summary>
            Gets the order assigned to the handler.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.ServiceDescriptor">
            <summary>
            Gets the service descriptor associated with the handler.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Type">
            <summary>
            Gets the type associated with the handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.CreateBuilder``1">
            <summary>
            Creates a builder allowing to initialize an immutable descriptor.
            </summary>
            <typeparam name="TContext">The event context type.</typeparam>
            <returns>A new descriptor builder.</returns>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1">
            <summary>
            Contains methods allowing to build a descriptor instance.
            </summary>
            <typeparam name="TContext">The event context type.</typeparam>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.AddFilter(System.Type)">
            <summary>
            Adds the type of a handler filter to the filters list.
            </summary>
            <param name="type">The event handler filter type.</param>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.AddFilter``1">
            <summary>
            Adds the type of a handler filter to the filters list.
            </summary>
            <typeparam name="TFilter">The event handler filter type.</typeparam>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.SetServiceDescriptor(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)">
            <summary>
            Sets the service descriptor.
            </summary>
            <param name="descriptor">The service descriptor.</param>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.SetOrder(System.Int32)">
            <summary>
            Sets the order in which the event handler will be invoked.
            </summary>
            <param name="order">The handler order.</param>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.SetType(OpenIddict.Validation.OpenIddictValidationHandlerType)">
            <summary>
            Sets the type associated to the handler.
            </summary>
            <param name="type">The handler type.</param>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.UseInlineHandler(System.Func{`0,System.Threading.Tasks.ValueTask})">
            <summary>
            Configures the descriptor to use the specified inline handler.
            </summary>
            <param name="handler">The handler instance.</param>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.UseScopedHandler``1">
            <summary>
            Configures the descriptor to use the specified scoped handler.
            </summary>
            <typeparam name="THandler">The handler type.</typeparam>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.UseSingletonHandler``1">
            <summary>
            Configures the descriptor to use the specified singleton handler.
            </summary>
            <typeparam name="THandler">The handler type.</typeparam>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.UseSingletonHandler``1(``0)">
            <summary>
            Configures the descriptor to use the specified singleton handler.
            </summary>
            <typeparam name="THandler">The handler type.</typeparam>
            <param name="handler">The handler instance.</param>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder`1.Build">
            <summary>
            Build a new descriptor instance, based on the parameters that were previously set.
            </summary>
            <returns>The builder instance, so that calls can be easily chained.</returns>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerFilters.RequireAuthorizationEntryValidationEnabled">
            <summary>
            Represents a filter that excludes the associated handlers if authorization validation was not enabled.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerFilters.RequireLocalValidation">
            <summary>
            Represents a filter that excludes the associated handlers if local validation is not used.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerFilters.RequireIntrospectionValidation">
            <summary>
            Represents a filter that excludes the associated handlers if introspection is not used.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerFilters.RequireTokenEntryValidationEnabled">
            <summary>
            Represents a filter that excludes the associated handlers if token validation was not enabled.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateToken">
            <summary>
            Contains the logic responsible of ensuring a token was correctly resolved from the context.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateToken.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateToken.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateReferenceTokenIdentifier">
            <summary>
            Contains the logic responsible of validating reference token identifiers.
            Note: this handler is not used when the degraded mode is enabled.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateReferenceTokenIdentifier.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateReferenceTokenIdentifier.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateIdentityModelToken">
            <summary>
            Contains the logic responsible of validating tokens generated using IdentityModel.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateIdentityModelToken.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateIdentityModelToken.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.IntrospectToken">
            <summary>
            Contains the logic responsible of validating the tokens using OAuth 2.0 introspection.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.IntrospectToken.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.IntrospectToken.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.NormalizeScopeClaims">
            <summary>
            Contains the logic responsible of normalizing the scope claims stored in the tokens.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.NormalizeScopeClaims.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.NormalizeScopeClaims.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.MapInternalClaims">
            <summary>
            Contains the logic responsible of mapping internal claims used by OpenIddict.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.MapInternalClaims.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.MapInternalClaims.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.RestoreReferenceTokenProperties">
            <summary>
            Contains the logic responsible of restoring the properties associated with a reference token entry.
            Note: this handler is not used when the degraded mode is enabled.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.RestoreReferenceTokenProperties.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.RestoreReferenceTokenProperties.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidatePrincipal">
            <summary>
            Contains the logic responsible of rejecting authentication demands for which no valid principal was resolved.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidatePrincipal.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidatePrincipal.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateExpirationDate">
            <summary>
            Contains the logic responsible of rejecting authentication demands containing expired access tokens.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateExpirationDate.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateExpirationDate.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateAudience">
            <summary>
            Contains the logic responsible of rejecting authentication demands containing
            access tokens that were issued to be used by another audience/resource server.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateAudience.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateAudience.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateTokenEntry">
            <summary>
            Contains the logic responsible of authentication demands a token whose
            associated token entry is no longer valid (e.g was revoked).
            Note: this handler is not used when the degraded mode is enabled.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateTokenEntry.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateTokenEntry.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateAuthorizationEntry">
            <summary>
            Contains the logic responsible of authentication demands a token whose
            associated authorization entry is no longer valid (e.g was revoked).
            Note: this handler is not used when the degraded mode is enabled.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateAuthorizationEntry.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.ValidateAuthorizationEntry.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessAuthenticationContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.AttachDefaultChallengeError">
            <summary>
            Contains the logic responsible of ensuring that the challenge response contains an appropriate error.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.AttachDefaultChallengeError.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.AttachDefaultChallengeError.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.ProcessChallengeContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.HandleErrorResponse`1">
            <summary>
            Contains the logic responsible of extracting potential errors from the response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.HandleErrorResponse`1.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.HandleErrorResponse`1.HandleAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ValidateIssuer">
            <summary>
            Contains the logic responsible of extracting the issuer from the discovery document.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ValidateIssuer.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ValidateIssuer.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractCryptographyEndpoint">
            <summary>
            Contains the logic responsible of extracting the JWKS endpoint address from the discovery document.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractCryptographyEndpoint.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractCryptographyEndpoint.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractIntrospectionEndpoint">
            <summary>
            Contains the logic responsible of extracting the introspection endpoint address from the discovery document.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractIntrospectionEndpoint.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractIntrospectionEndpoint.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleConfigurationResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractSigningKeys">
            <summary>
            Contains the logic responsible of extracting the signing keys from the JWKS document.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractSigningKeys.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Discovery.ExtractSigningKeys.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleCryptographyResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.AttachCredentials">
            <summary>
            Contains the logic responsible of attaching the client credentials to the introspection request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.AttachCredentials.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.AttachCredentials.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.AttachToken">
            <summary>
            Contains the logic responsible of attaching the token to the introspection request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.AttachToken.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.AttachToken.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.PrepareIntrospectionRequestContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.HandleInactiveResponse">
            <summary>
            Contains the logic responsible of extracting the active: false marker from the response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.HandleInactiveResponse.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.HandleInactiveResponse.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateWellKnownClaims">
            <summary>
            Contains the logic responsible of validating the well-known claims contained in the introspection response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateWellKnownClaims.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateWellKnownClaims.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateIssuer">
            <summary>
            Contains the logic responsible of extracting the issuer from the introspection response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateIssuer.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateIssuer.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateTokenType">
            <summary>
            Contains the logic responsible of extracting and validating the token type from the introspection response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateTokenType.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.ValidateTokenType.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.PopulateClaims">
            <summary>
            Contains the logic responsible of extracting the claims from the introspection response.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.PopulateClaims.Descriptor">
            <summary>
            Gets the default descriptor definition assigned to this handler.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHandlers.Introspection.PopulateClaims.HandleAsync(OpenIddict.Validation.OpenIddictValidationEvents.HandleIntrospectionResponseContext)">
            <inheritdoc/>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHandlerType">
            <summary>
            Represents the type of an OpenIddict validation handler.
            </summary>
        </member>
        <member name="F:OpenIddict.Validation.OpenIddictValidationHandlerType.Unknown">
            <summary>
            The handler is of an unspecified type.
            </summary>
        </member>
        <member name="F:OpenIddict.Validation.OpenIddictValidationHandlerType.BuiltIn">
            <summary>
            The handler is a built-in handler, provided as part of the official OpenIddict packages.
            </summary>
        </member>
        <member name="F:OpenIddict.Validation.OpenIddictValidationHandlerType.Custom">
            <summary>
            The handler is a custom handler, registered by the end user or a third-party package.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationHelpers">
            <summary>
            Exposes extensions simplifying the integration with the OpenIddict validation services.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHelpers.GetProperty``1(OpenIddict.Validation.OpenIddictValidationTransaction,System.String)">
            <summary>
            Retrieves a property value from the validation transaction using the specified name.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="transaction">The validation transaction.</param>
            <param name="name">The property name.</param>
            <returns>The property value or <c>null</c> if it couldn't be found.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationHelpers.SetProperty``1(OpenIddict.Validation.OpenIddictValidationTransaction,System.String,``0)">
            <summary>
            Sets a property in the validation transaction using the specified name and value.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="transaction">The validation transaction.</param>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
            <returns>The validation transaction, so that calls can be easily chained.</returns>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationOptions">
            <summary>
            Provides various settings needed to configure the OpenIddict validation handler.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.EncryptionCredentials">
            <summary>
            Gets the list of encryption credentials used by the OpenIddict validation services.
            Note: the encryption credentials are not used to protect/unprotect tokens issued
            by ASP.NET Core Data Protection, that uses its own key ring, configured separately.
            </summary>
            <remarks>
            Note: OpenIddict automatically sorts the credentials based on the following algorithm:
            <list type="bullet">
              <item><description>Symmetric keys are always preferred when they can be used for the operation (e.g token encryption).</description></item>
              <item><description>X.509 keys are always preferred to non-X.509 asymmetric keys.</description></item>
              <item><description>X.509 keys with the furthest expiration date are preferred.</description></item>
              <item><description>X.509 keys whose backing certificate is not yet valid are never preferred.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.JsonWebTokenHandler">
            <summary>
            Gets or sets the JWT handler used to protect and unprotect tokens.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.Handlers">
            <summary>
            Gets the list of the handlers responsible of processing the OpenIddict validation operations.
            Note: the list is automatically sorted based on the order assigned to each handler descriptor.
            As such, it MUST NOT be mutated after options initialization to preserve the exact order.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.ValidationType">
            <summary>
            Gets or sets the type of validation used by the OpenIddict validation services.
            By default, local validation is always used.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.ClientId">
            <summary>
            Gets or sets the client identifier sent to the authorization server when using remote validation.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.ClientSecret">
            <summary>
            Gets or sets the client secret sent to the authorization server when using remote validation.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.EnableAuthorizationEntryValidation">
            <summary>
            Gets or sets a boolean indicating whether a database call is made
            to validate the authorization entry associated with the received tokens.
            Note: enabling this option may have an impact on performance and
            can only be used with an OpenIddict-based authorization server.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.EnableTokenEntryValidation">
            <summary>
            Gets or sets a boolean indicating whether a database call is made
            to validate the token entry associated with the received tokens.
            Note: enabling this option may have an impact on performance but
            is required when the OpenIddict server emits reference tokens.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.Issuer">
            <summary>
            Gets or sets the absolute URL of the OAuth 2.0/OpenID Connect server.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.MetadataAddress">
            <summary>
            Gets or sets the URL of the OAuth 2.0/OpenID Connect server discovery endpoint.
            When the URL is relative, <see cref="P:OpenIddict.Validation.OpenIddictValidationOptions.Issuer"/> must be set and absolute.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.Configuration">
            <summary>
            Gets or sets the OAuth 2.0/OpenID Connect static server configuration, if applicable.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.ConfigurationManager">
            <summary>
            Gets or sets the configuration manager used to retrieve
            and cache the OAuth 2.0/OpenID Connect server configuration.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.Audiences">
            <summary>
            Gets the intended audiences of this resource server.
            Setting this property is recommended when the authorization
            server issues access tokens for multiple distinct resource servers.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationOptions.TokenValidationParameters">
            <summary>
            Gets the token validation parameters used by the OpenIddict validation services.
            </summary>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationRetriever.#ctor(OpenIddict.Validation.OpenIddictValidationService)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationRetriever"/> class.
            </summary>
            <param name="service">The validation service.</param>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationRetriever.Microsoft#IdentityModel#Protocols#IConfigurationRetriever{Microsoft#IdentityModel#Protocols#OpenIdConnect#OpenIdConnectConfiguration}#GetConfigurationAsync(System.String,Microsoft.IdentityModel.Protocols.IDocumentRetriever,System.Threading.CancellationToken)">
            <summary>
            Retrieves the OpenID Connect server configuration from the specified address.
            </summary>
            <param name="address">The address of the remote metadata endpoint.</param>
            <param name="retriever">The retriever used by IdentityModel.</param>
            <param name="cancel">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>The OpenID Connect server configuration retrieved from the remote server.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationService.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new instance of the <see cref="T:OpenIddict.Validation.OpenIddictValidationService"/> class.
            </summary>
            <param name="provider">The service provider.</param>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationService.GetConfigurationAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Retrieves the OpenID Connect server configuration from the specified address.
            </summary>
            <param name="address">The address of the remote metadata endpoint.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>The OpenID Connect server configuration retrieved from the remote server.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationService.GetSecurityKeysAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Retrieves the security keys exposed by the specified JWKS endpoint.
            </summary>
            <param name="address">The address of the remote metadata endpoint.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>The security keys retrieved from the remote server.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationService.IntrospectTokenAsync(System.Uri,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an introspection request to the specified address and returns the corresponding principal.
            </summary>
            <param name="address">The address of the remote metadata endpoint.</param>
            <param name="token">The token to introspect.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>The claims principal created from the claim retrieved from the remote server.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationService.IntrospectTokenAsync(System.Uri,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an introspection request to the specified address and returns the corresponding principal.
            </summary>
            <param name="address">The address of the remote metadata endpoint.</param>
            <param name="token">The token to introspect.</param>
            <param name="type">The token type to introspect.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>The claims principal created from the claim retrieved from the remote server.</returns>
        </member>
        <member name="M:OpenIddict.Validation.OpenIddictValidationService.ValidateAccessTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Validates the specified access token and returns the principal extracted from the token.
            </summary>
            <param name="token">The access token to validate.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that can be used to abort the operation.</param>
            <returns>The principal containing the claims extracted from the token.</returns>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationTransaction">
            <summary>
            Represents the context associated with an OpenID Connect validation request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.EndpointType">
            <summary>
            Gets or sets the type of the endpoint processing the current request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Issuer">
            <summary>
            Gets or sets the issuer address associated with the current transaction, if available.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Localizer">
            <summary>
            Gets or sets the localizer associated with the current request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Logger">
            <summary>
            Gets or sets the logger associated with the current request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Options">
            <summary>
            Gets or sets the options associated with the current request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Properties">
            <summary>
            Gets the additional properties associated with the current request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Request">
            <summary>
            Gets or sets the current OpenID Connect request.
            </summary>
        </member>
        <member name="P:OpenIddict.Validation.OpenIddictValidationTransaction.Response">
            <summary>
            Gets or sets the current OpenID Connect response being returned.
            </summary>
        </member>
        <member name="T:OpenIddict.Validation.OpenIddictValidationType">
            <summary>
            Represents the type of validation performed by the OpenIddict validation services.
            </summary>
        </member>
        <member name="F:OpenIddict.Validation.OpenIddictValidationType.Direct">
            <summary>
            Configures the OpenIddict validation services to use direct validation.
            By default, direct validation uses IdentityModel to validate JWT tokens,
            but a different token format can be used by registering the corresponding
            package (e.g OpenIddict.Validation.DataProtection, for Data Protection tokens).
            </summary>
        </member>
        <member name="F:OpenIddict.Validation.OpenIddictValidationType.Introspection">
            <summary>
            Configures the OpenIddict validation services to use introspection.
            When using introspection, an OAuth 2.0 introspection request is sent
            to the authorization server to validate the received access token.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder">
            <summary>
            Exposes the necessary methods required to configure the OpenIddict validation services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.
            </summary>
            <param name="services">The services collection.</param>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.Services">
            <summary>
            Gets the services collection.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEventHandler``1(System.Action{OpenIddict.Validation.OpenIddictValidationHandlerDescriptor.Builder{``0}})">
            <summary>
            Registers an event handler using the specified configuration delegate.
            </summary>
            <typeparam name="TContext">The event context type.</typeparam>
            <param name="configuration">The configuration delegate.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEventHandler(OpenIddict.Validation.OpenIddictValidationHandlerDescriptor)">
            <summary>
            Registers an event handler using the specified descriptor.
            </summary>
            <param name="descriptor">The handler descriptor.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.RemoveEventHandler(OpenIddict.Validation.OpenIddictValidationHandlerDescriptor)">
            <summary>
            Removes the event handler that matches the specified descriptor.
            </summary>
            <param name="descriptor">The descriptor corresponding to the handler to remove.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.Configure(System.Action{OpenIddict.Validation.OpenIddictValidationOptions})">
            <summary>
            Amends the default OpenIddict validation configuration.
            </summary>
            <param name="configuration">The delegate used to configure the OpenIddict options.</param>
            <remarks>This extension can be safely called multiple times.</remarks>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCredentials(Microsoft.IdentityModel.Tokens.EncryptingCredentials)">
            <summary>
            Registers encryption credentials.
            </summary>
            <param name="credentials">The encrypting credentials.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionKey(Microsoft.IdentityModel.Tokens.SecurityKey)">
            <summary>
            Registers an encryption key.
            </summary>
            <param name="key">The security key.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Registers an encryption certificate.
            </summary>
            <param name="certificate">The encryption certificate.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Registers an encryption certificate retrieved from an embedded resource.
            </summary>
            <param name="assembly">The assembly containing the certificate.</param>
            <param name="resource">The name of the embedded resource.</param>
            <param name="password">The password used to open the certificate.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.Reflection.Assembly,System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>
            Registers an encryption certificate retrieved from an embedded resource.
            </summary>
            <param name="assembly">The assembly containing the certificate.</param>
            <param name="resource">The name of the embedded resource.</param>
            <param name="password">The password used to open the certificate.</param>
            <param name="flags">An enumeration of flags indicating how and where to store the private key of the certificate.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.IO.Stream,System.String)">
            <summary>
            Registers an encryption certificate extracted from a stream.
            </summary>
            <param name="stream">The stream containing the certificate.</param>
            <param name="password">The password used to open the certificate.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.IO.Stream,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>
            Registers an encryption certificate extracted from a stream.
            </summary>
            <param name="stream">The stream containing the certificate.</param>
            <param name="password">The password used to open the certificate.</param>
            <param name="flags">
            An enumeration of flags indicating how and where
            to store the private key of the certificate.
            </param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.String)">
            <summary>
            Registers an encryption certificate retrieved from the X.509 user or machine store.
            </summary>
            <param name="thumbprint">The thumbprint of the certificate used to identify it in the X.509 store.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddEncryptionCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>
            Registers an encryption certificate retrieved from the specified X.509 store.
            </summary>
            <param name="thumbprint">The thumbprint of the certificate used to identify it in the X.509 store.</param>
            <param name="name">The name of the X.509 store.</param>
            <param name="location">The location of the X.509 store.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.AddAudiences(System.String[])">
            <summary>
            Registers the specified values as valid audiences. Setting the audiences is recommended
            when the authorization server issues access tokens for multiple distinct resource servers.
            </summary>
            <param name="audiences">The audiences valid for this resource server.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.EnableAuthorizationEntryValidation">
            <summary>
            Enables authorization validation so that a database call is made for each API request
            to ensure the authorization associated with the access token is still valid.
            Note: enabling this option may have an impact on performance and
            can only be used with an OpenIddict-based authorization server.
            </summary>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.EnableTokenEntryValidation">
            <summary>
            Enables token validation so that a database call is made for each API request
            to ensure the token entry associated with the access token is still valid.
            Note: enabling this option may have an impact on performance but is required
            when the OpenIddict server is configured to use reference tokens.
            </summary>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.SetConfiguration(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration)">
            <summary>
            Sets a static OpenID Connect server configuration, that will be used to
            resolve the metadata/introspection endpoints and the issuer signing keys.
            </summary>
            <param name="configuration">The server configuration.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.SetClientId(System.String)">
            <summary>
            Sets the client identifier client_id used when communicating
            with the remote authorization server (e.g for introspection).
            </summary>
            <param name="identifier">The client identifier.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.SetClientSecret(System.String)">
            <summary>
            Sets the client identifier client_secret used when communicating
            with the remote authorization server (e.g for introspection).
            </summary>
            <param name="secret">The client secret.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.SetIssuer(System.Uri)">
            <summary>
            Sets the issuer address, which is used to determine the actual location of the
            OAuth 2.0/OpenID Connect configuration document when using provider discovery.
            </summary>
            <param name="address">The issuer address.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.SetIssuer(System.String)">
            <summary>
            Sets the issuer address, which is used to determine the actual location of the
            OAuth 2.0/OpenID Connect configuration document when using provider discovery.
            </summary>
            <param name="address">The issuer address.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.UseIntrospection">
            <summary>
            Configures OpenIddict to use introspection instead of local/direct validation.
            </summary>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationExtensions">
            <summary>
            Exposes extensions allowing to register the OpenIddict validation services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationExtensions.AddValidation(Microsoft.Extensions.DependencyInjection.OpenIddictBuilder)">
            <summary>
            Registers the OpenIddict token validation services in the DI container.
            </summary>
            <param name="builder">The services builder used by OpenIddict to register new services.</param>
            <remarks>This extension can be safely called multiple times.</remarks>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.OpenIddictValidationExtensions.AddValidation(Microsoft.Extensions.DependencyInjection.OpenIddictBuilder,System.Action{Microsoft.Extensions.DependencyInjection.OpenIddictValidationBuilder})">
            <summary>
            Registers the OpenIddict token validation services in the DI container.
            </summary>
            <param name="builder">The services builder used by OpenIddict to register new services.</param>
            <param name="configuration">The configuration delegate used to configure the validation services.</param>
            <remarks>This extension can be safely called multiple times.</remarks>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.OpenIddictBuilder"/>.</returns>
        </member>
    </members>
</doc>
