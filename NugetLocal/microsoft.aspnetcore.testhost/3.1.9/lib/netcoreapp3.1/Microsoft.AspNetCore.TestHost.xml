<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.TestHost</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.TestHost.ClientHandler">
            <summary>
            This adapts HttpRequestMessages to ASP.NET Core requests, dispatches them through the pipeline, and returns the
            associated HttpResponseMessage.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.ClientHandler.#ctor(Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.TestHost.ApplicationWrapper)">
            <summary>
            Create a new handler.
            </summary>
            <param name="pathBase">The base path.</param>
            <param name="application">The <see cref="T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.ClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            This adapts HttpRequestMessages to ASP.NET Core requests, dispatches them through the pipeline, and returns the
            associated HttpResponseMessage.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.HostBuilderTestServerExtensions.GetTestServer(Microsoft.Extensions.Hosting.IHost)">
            <summary>
            Retrieves the TestServer from the host services.
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.HostBuilderTestServerExtensions.GetTestClient(Microsoft.Extensions.Hosting.IHost)">
            <summary>
            Retrieves the test client from the TestServer in the host services.
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.HttpContextBuilder.SendAsync(System.Threading.CancellationToken)">
            <summary>
            Start processing the request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.TestHost.HttpResetTestException">
            <summary>
            Used to surface to the test client that the application invoked <see cref="M:Microsoft.AspNetCore.Http.Features.IHttpResetFeature.Reset(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.HttpResetTestException.#ctor(System.Int32)">
            <summary>
            Creates a new test exception
            </summary>
            <param name="errorCode">The error code passed to <see cref="M:Microsoft.AspNetCore.Http.Features.IHttpResetFeature.Reset(System.Int32)"/></param>
        </member>
        <member name="P:Microsoft.AspNetCore.TestHost.HttpResetTestException.ErrorCode">
            <summary>
            The error code passed to <see cref="M:Microsoft.AspNetCore.Http.Features.IHttpResetFeature.Reset(System.Int32)"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.TestHost.RequestBuilder">
            <summary>
            Used to construct a HttpRequestMessage object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.RequestBuilder.#ctor(Microsoft.AspNetCore.TestHost.TestServer,System.String)">
            <summary>
            Construct a new HttpRequestMessage with the given path.
            </summary>
            <param name="server"></param>
            <param name="path"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.TestHost.RequestBuilder.TestServer">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.TestHost.RequestBuilder.TestServer"/> instance for which the request is being built.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.RequestBuilder.And(System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Configure any HttpRequestMessage properties.
            </summary>
            <param name="configure"></param>
            <returns>This <see cref="T:Microsoft.AspNetCore.TestHost.RequestBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.RequestBuilder.AddHeader(System.String,System.String)">
            <summary>
            Add the given header and value to the request or request content.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns>This <see cref="T:Microsoft.AspNetCore.TestHost.RequestBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.RequestBuilder.SendAsync(System.String)">
            <summary>
            Set the request method and start processing the request.
            </summary>
            <param name="method"></param>
            <returns>The resulting <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.RequestBuilder.GetAsync">
            <summary>
            Set the request method to GET and start processing the request.
            </summary>
            <returns>The resulting <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.RequestBuilder.PostAsync">
            <summary>
            Set the request method to POST and start processing the request.
            </summary>
            <returns>The resulting <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.TestHost.ResponseBodyReaderStream">
            <summary>
            The client's view of the response body.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(System.IServiceProvider)">
            <summary>
            For use with IHostBuilder.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(System.IServiceProvider,Microsoft.AspNetCore.Http.Features.IFeatureCollection)">
            <summary>
            For use with IHostBuilder.
            </summary>
            <param name="services"></param>
            <param name="featureCollection"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            For use with IWebHostBuilder.
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.AspNetCore.Http.Features.IFeatureCollection)">
            <summary>
            For use with IWebHostBuilder.
            </summary>
            <param name="builder"></param>
            <param name="featureCollection"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.TestHost.TestServer.AllowSynchronousIO">
            <summary>
            Gets or sets a value that controls whether synchronous IO is allowed for the <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request"/> and <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response"/>. The default value is <see langword="false" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.TestHost.TestServer.PreserveExecutionContext">
            <summary>
            Gets or sets a value that controls if <see cref="T:System.Threading.ExecutionContext"/> and <see cref="T:System.Threading.AsyncLocal`1"/> values are preserved from the client to the server. The default value is <see langword="false" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.TestServer.CreateRequest(System.String)">
            <summary>
            Begins constructing a request message for submission.
            </summary>
            <param name="path"></param>
            <returns><see cref="T:Microsoft.AspNetCore.TestHost.RequestBuilder"/> to use in constructing additional request details.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.TestServer.SendAsync(System.Action{Microsoft.AspNetCore.Http.HttpContext},System.Threading.CancellationToken)">
            <summary>
            Creates, configures, sends, and returns a <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>. This completes as soon as the response is started.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.WebHostBuilderExtensions.GetTestServer(Microsoft.AspNetCore.Hosting.IWebHost)">
            <summary>
            Retrieves the TestServer from the host services.
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.TestHost.WebHostBuilderExtensions.GetTestClient(Microsoft.AspNetCore.Hosting.IWebHost)">
            <summary>
            Retrieves the test client from the TestServer in the host services.
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
    </members>
</doc>
